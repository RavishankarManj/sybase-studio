{
	"name": "PL_LOAD_SAP_kshitij",
	"properties": {
		"activities": [
			{
				"name": "SAP_TO_ADLS",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "ObjectsLookup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "DF_SAP_TO_ADLS",
						"type": "DataFlowReference",
						"parameters": {
							"Container": {
								"value": "'@{split(split(activity('ObjectsLookup').output.firstRow.ContainerPath, '/')[2], '@')[0]}'",
								"type": "Expression"
							},
							"directory": {
								"value": "'@{concat(activity('ObjectsLookup').output.firstRow.LandingLayerPath, '/', activity('ObjectsLookup').output.firstRow.sourcetype, '/',activity('ObjectsLookup').output.firstRow.schema, '/', activity('ObjectsLookup').output.firstRow.SourceObjectName)}'",
								"type": "Expression"
							},
							"filename": {
								"value": "'@{concat(activity('ObjectsLookup').output.firstRow.SourceObjectName, '_', formatDateTime(pipeline().TriggerTime,'yyyyMMddHHMMss'), '.parquet')}'",
								"type": "Expression"
							},
							"ODPName": {
								"value": "'@{activity('ObjectsLookup').output.firstRow.filepath}'",
								"type": "Expression"
							}
						}
					},
					"staging": {
						"linkedService": {
							"referenceName": "ls_adls_difadlsdev",
							"type": "LinkedServiceReference"
						},
						"folderPath": "landing/SAP"
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Coarse"
				}
			},
			{
				"name": "ObjectsLookup",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[GetObjectsMetadata]",
						"storedProcedureParameters": {
							"objectid": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.ObjectId",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_SQL_METADATA",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "Column Mapping Lookup",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Execute Pipeline CreateTable",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT * FROM dbo.ObjectColumnMapping WHERE ObjectID = @{pipeline().parameters.ObjectId} AND IsActive = 1;",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_SQL_METADATA",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Execute Pipeline CreateTable",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "SAP_TO_ADLS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PL_AZ_CreateTable",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"TargetObjectName": {
							"value": "@activity('ObjectsLookup').output.firstRow.TargetObjectName",
							"type": "Expression"
						},
						"TargetObjectDDL": {
							"value": "@activity('ObjectsLookup').output.firstRow.TargetObjectDDL",
							"type": "Expression"
						},
						"TargetSchema": {
							"value": "@activity('ObjectsLookup').output.firstRow.schema",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "NB_DATA_LOAD",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "DQConfig Mapping Lookup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": {
							"value": "NB_DATA_LOAD",
							"type": "Expression"
						},
						"type": "NotebookReference"
					},
					"parameters": {
						"landing_directory": {
							"value": {
								"value": "@concat(activity('ObjectsLookup').output.firstRow.LandingLayerPath, '/', activity('ObjectsLookup').output.firstRow.sourcetype, '/', activity('ObjectsLookup').output.firstRow.schema, '/', activity('ObjectsLookup').output.firstRow.SourceObjectName)",
								"type": "Expression"
							},
							"type": "string"
						},
						"landing_file_name": {
							"value": {
								"value": "@concat(activity('ObjectsLookup').output.firstRow.SourceObjectName, '_', formatDateTime(pipeline().TriggerTime,'yyyyMMddHHMMss'), '.parquet')",
								"type": "Expression"
							},
							"type": "string"
						},
						"container_name": {
							"value": {
								"value": "@split(split(activity('ObjectsLookup').output.firstRow.ContainerPath, '/')[2], '@')[0]",
								"type": "Expression"
							},
							"type": "string"
						},
						"schema": {
							"value": {
								"value": "@activity('ObjectsLookup').output.firstRow.schema",
								"type": "Expression"
							},
							"type": "string"
						},
						"load_type": {
							"value": {
								"value": "@activity('ObjectsLookup').output.firstRow.LoadType",
								"type": "Expression"
							},
							"type": "string"
						},
						"source_name": {
							"value": {
								"value": "@activity('ObjectsLookup').output.firstRow.SourceName",
								"type": "Expression"
							},
							"type": "string"
						},
						"source_object_name": {
							"value": {
								"value": "@activity('ObjectsLookup').output.firstRow.SourceObjectName",
								"type": "Expression"
							},
							"type": "string"
						},
						"parition_column": {
							"value": {
								"value": "@activity('ObjectsLookup').output.firstRow.paritioncolumn",
								"type": "Expression"
							},
							"type": "string"
						},
						"target_object_name": {
							"value": {
								"value": "@activity('ObjectsLookup').output.firstRow.TargetObjectName",
								"type": "Expression"
							},
							"type": "string"
						},
						"container_path": {
							"value": {
								"value": "@activity('ObjectsLookup').output.firstRow.ContainerPath",
								"type": "Expression"
							},
							"type": "string"
						},
						"Validation_layer_Path": {
							"value": {
								"value": "@activity('ObjectsLookup').output.firstRow.ValidationLayerPath",
								"type": "Expression"
							},
							"type": "string"
						},
						"silver_layer_path": {
							"value": {
								"value": "@activity('ObjectsLookup').output.firstRow.SilverLayerPath",
								"type": "Expression"
							},
							"type": "string"
						},
						"ingestion_id": {
							"value": {
								"value": "@activity('ObjectsLookup').output.firstRow.IngestionId",
								"type": "Expression"
							},
							"type": "int"
						},
						"file_path": {
							"value": {
								"value": "@activity('ObjectsLookup').output.firstRow.IngestionId",
								"type": "Expression"
							},
							"type": "string"
						},
						"object_id": {
							"value": {
								"value": "@pipeline().parameters.ObjectId",
								"type": "Expression"
							},
							"type": "int"
						},
						"ingestion_name": {
							"value": {
								"value": "@pipeline().parameters.IngestionName",
								"type": "Expression"
							},
							"type": "string"
						},
						"attributes_details": {
							"value": {
								"value": "@string(activity('Column Mapping Lookup').output.value)",
								"type": "Expression"
							},
							"type": "string"
						},
						"target_database": {
							"value": "dif_accelerator_dedicate_pool",
							"type": "string"
						},
						"objectLookup": {
							"value": {
								"value": "@string(activity('ObjectsLookup').output.firstRow)",
								"type": "Expression"
							},
							"type": "string"
						},
						"bronze_layer_path": {
							"value": {
								"value": "@activity('ObjectsLookup').output.firstRow.BronzeLayerPath",
								"type": "Expression"
							},
							"type": "string"
						},
						"landing_layer_path": {
							"value": {
								"value": "@activity('ObjectsLookup').output.firstRow.LandingLayerPath",
								"type": "Expression"
							},
							"type": "string"
						},
						"source_type": {
							"value": {
								"value": "activity('ObjectsLookup').output.firstRow.sourcetype",
								"type": "Expression"
							},
							"type": "string"
						},
						"dq_attributes_details": {
							"value": {
								"value": "@string(activity('DQConfig Mapping Lookup').output.value)",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": {
							"value": "difaccsparkpool",
							"type": "Expression"
						},
						"type": "BigDataPoolReference"
					},
					"executorSize": "Small",
					"driverSize": "Small"
				},
				"linkedServiceName": {
					"referenceName": "LS_AzureSynapseAnalytics_WS",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Watemark Update Condition",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "NB_DATA_LOAD",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('ObjectsLookup').output.firstRow.LoadType, 'full')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Watermark update Script",
							"type": "Script",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "NonQuery",
										"text": {
											"value": "UPDATE dbo.ObjectAttributes SET watermarkvalue = '@{formatDateTime(split(activity('NB_DATA_LOAD').output.status.Output.result.exitValue, ',')[8],'yyyy-MM-dd HH:mm:ss')}' WHERE objectid = @{pipeline().parameters.ObjectId}\n",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Set variable1",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "water",
								"value": {
									"value": "UPDATE dbo.ObjectAttributes SET watermarkvalue = '@{formatDateTime(split(activity('NB_DATA_LOAD').output.status.Output.result.exitValue, ',')[8],'yyyy-MM-dd HH:mm:ss')}' WHERE objectid = @{pipeline().parameters.ObjectId}",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Audit Log Stored procedure",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Watemark Update Condition",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[InsertAuditLogs]",
					"storedProcedureParameters": {
						"BronzeCount": {
							"value": {
								"value": "@activity('SAP_TO_ADLS').output.runStatus.metrics.ADLS.stages[0].streams.ADLS.count",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"BronzeEndTime": {
							"value": {
								"value": "@formatDateTime(pipeline().TriggerTime,'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"FailureReason": {
							"value": null,
							"type": "String"
						},
						"IngestionName": {
							"value": {
								"value": "@pipeline().parameters.IngestionName",
								"type": "Expression"
							},
							"type": "String"
						},
						"IngestionStartTime": {
							"value": {
								"value": "@pipeline().TriggerTime",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"last_Ins_Upd_Date": {
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"LoadCount": {
							"value": {
								"value": "@int(split(activity('NB_DATA_LOAD').output.status.Output.result.exitValue, ',')[3])",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"LoadTimestamp": {
							"value": {
								"value": "@split(activity('NB_DATA_LOAD').output.status.Output.result.exitValue, ',')[4]",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"MasterPipelineRunId": {
							"value": {
								"value": "@pipeline()?.TriggeredByPipelineRunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"ObjectId": {
							"value": {
								"value": "@pipeline().parameters.ObjectId",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"PipelineRunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"RejectCount": {
							"value": {
								"value": "@int(split(activity('NB_DATA_LOAD').output.status.Output.result.exitValue, ',')[2])",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"SilverEndTime": {
							"value": {
								"value": "@split(activity('NB_DATA_LOAD').output.status.Output.result.exitValue, ',')[7]",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"SourceCount": {
							"value": {
								"value": "@activity('SAP_TO_ADLS').output.runStatus.metrics.ADLS.stages[0].streams.SAP.count",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"SourceObjectName": {
							"value": {
								"value": "@activity('ObjectsLookup').output.firstRow.SourceObjectName",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceParquetFileName": {
							"value": {
								"value": "@split(activity('NB_DATA_LOAD').output.status.Output.result.exitValue, ',')[0]",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceType": {
							"value": {
								"value": "@activity('ObjectsLookup').output.firstRow.sourcetype",
								"type": "Expression"
							},
							"type": "String"
						},
						"Status": {
							"value": "Succeeded",
							"type": "String"
						},
						"TargetTableName": {
							"value": {
								"value": "@split(activity('NB_DATA_LOAD').output.status.Output.result.exitValue, ',')[1]",
								"type": "Expression"
							},
							"type": "String"
						},
						"TransformationEndTime": {
							"value": {
								"value": "@split(activity('NB_DATA_LOAD').output.status.Output.result.exitValue, ',')[6]",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"ValidationEndTime": {
							"value": {
								"value": "@split(activity('NB_DATA_LOAD').output.status.Output.result.exitValue, ',')[5]",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"WatermarkValue": {
							"value": {
								"value": "@pipeline().TriggerTime",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "DQConfig Mapping Lookup",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Column Mapping Lookup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT * FROM dbo.DQConfig WHERE ObjectID = @{pipeline().parameters.ObjectId};",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_SQL_METADATA",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			}
		],
		"parameters": {
			"ObjectId": {
				"type": "string",
				"defaultValue": "48"
			},
			"IngestionName": {
				"type": "string",
				"defaultValue": "SAP"
			}
		},
		"variables": {
			"water": {
				"type": "String"
			},
			"abc": {
				"type": "String"
			},
			"bcd": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Child pipelines"
		},
		"annotations": [],
		"lastPublishTime": "2024-04-08T08:20:47Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}